## ------------------------------------------------------------------------ ##
## .npmrc                                     Nicholas Berlette, 2022-05-31 ##
## ------------------------------------------------------------------------ ##
##          https://github.com/nberlette/dotfiles/blob/main/.npmrc          ##
## ------------------------------------------------------------------------ ##
##              MIT Â© Nicholas Berlette <nick@berlette.com>                 ##
## ------------------------------------------------------------------------ ##

# npm registry uses $NPM_TOKEN
//registry.npmjs.org:_authToken=${NPM_TOKEN}
//registry.npmjs.org:always-auth=true

# github package registry (gpr) uses $GITHUB_TOKEN
//npm.pkg.github.com:_authToken=${GITHUB_TOKEN}
//npm.pkg.github.com:always-auth=true

# Save all dependencies in package.json pinned to their specific version numbers (no ^ or ~ prefix).
save-exact=true

# Choose the semver prefix for saving dependencies to package.json (^ for "minor", ~ for "patch", etc)
save-prefix=

# (true | false) - true: the "engines" field is *strictly* respected
engine-strict=true

# (true | false) - true: the "engines" field in package.json is ignored
ignore-engines=false

# (true | false) - true: ignore warnings from the command-line interface
ignore-warnings=true

## ------------------------------------------------------------------------ ##
##  pnpm-specific options
## ------------------------------------------------------------------------ ##

# Disable warnings when adding packages while not in the workspace root directory
ignore-workspace-root-check=true

# If you want to create a flat node_modules structure, set this to true.
shamefully-hoist=true

# If you don't want pnpm to fail on peer dependency issues, set this to false.
strict-peer-dependencies=false

# If you want peer dependencies to be automatically installed, set this to true.
auto-install-peers=true

# (true | false | deep) - true: use workspaces, false: don't use workspaces, deep: use workspaces with deep resolution
link-workspace-packages=true

# (true | false) - always use workspace package versions, even if a new version is available in the registry
prefer-workspace-packages=true

# (true | false) - use a unified lockfile at the workspace root
shared-workspace-lockfile=true

## ------------------------------------------------------------------------ ##
##  options used by `pnpm version` and `pnpm publish`
## ------------------------------------------------------------------------ ##

# Create a new git tag after bumping a package version (npm publish / npm version, etc)
git-tag-version=true

# sign that git tag with your configured GPG key
sign-git-tag=true

# Sign all npm-invoked git commits with GPG
sign-git-commit=true

## ------------------------------------------------------------------------ ##
## pkg init defaults - used by `(npm|yarn) init` for new package.json files
## ------------------------------------------------------------------------ ##

# npm parses these 3 values into a single string for the pkg.author prop.
# e.g. "Nicholas Berlette <nick@berlette.com> (https://berlette.com)"
init-author-name=Nicholas Berlette
init-author-email=nick@berlette.com
init-author-url=https://berlette.com

# SPDX license ID (default is ISC, but I usually distribute my software with MIT)
init-license=MIT

# initial version for new package.json files
init-version=0.0.1
